<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Trung Tran's Blog</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 22 Jan 2019 16:41:03 +0700</pubDate>
    <lastBuildDate>Tue, 22 Jan 2019 16:41:03 +0700</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Self study javascript, ES6, React P4</title>
        <description>Phần này chúng ta sẽ phân tích các thành phần của redux.

</description>
        <pubDate>Mon, 03 Dec 2018 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2018/12/03/learning-react-p4/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/12/03/learning-react-p4/</guid>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Self study javascript, ES6, React P3</title>
        <description>Tiếp nối phần 2, phần này sẽ tìm hiểu nốt về các function của react. Sang phần sau thì chúng ta sẽ chuyển qua react-redux.

</description>
        <pubDate>Sun, 02 Dec 2018 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2018/12/02/learning-react-p3/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/12/02/learning-react-p3/</guid>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Self study javascript, ES6, React P2</title>
        <description>Tiếp nối phần 1 về ES6, phần này chúng ta sẽ tìm hiểu về ReactJS.

</description>
        <pubDate>Fri, 02 Nov 2018 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2018/11/02/learning-react-p2/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/11/02/learning-react-p2/</guid>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Self study javascript, ES6, React</title>
        <description>Mình là backend-developer, tuy nhiên dạo gần đây mình có tập trung nhiều hơn mảng frontend.
Trước làm tay ngang kiểu học mót thì cũng biết được gọi là chút css, javascript, jquery, angularjs các kiểu, tuy nhiên cũng chưa có lần nào học bài bản và  ghi chép lại. Nay mình bắt đầu học về React thì mình cũng có ghi chép lại một phần là để sau này lúc làm có cái lục lại một phần là hy vọng tài liệu của mình có thể giúp ích được một ai đó bắt đầu học từ đầu như mình.

</description>
        <pubDate>Tue, 09 Oct 2018 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2018/10/09/learning-react/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/10/09/learning-react/</guid>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>ActiveRecord's queries tricks</title>
        <description>
Mảng kiến thức yêu thích của tôi trong framework rails đó là ActiveRecord’s scopes.

Trong bài viết này tôi sẽ giới thiệu 5 trick mà tôi thường xuyên sử dụng trong các project của mình.

</description>
        <pubDate>Sun, 23 Sep 2018 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2018/09/23/activerecord-query-trick/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/23/activerecord-query-trick/</guid>
        
        
        <category>RoR</category>
        
      </item>
    
      <item>
        <title>Manually preloading associations in rails</title>
        <description>
Chúng ta có lẽ đã quen với việc sử dụng &lt;code class=&quot;highlighter-rouge&quot;&gt;preloading&lt;/code&gt; trong rails thông qua việc sử dụng &lt;code class=&quot;highlighter-rouge&quot;&gt;includes&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;eager_load&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;preload&lt;/code&gt;
trực tiếp trên &lt;code class=&quot;highlighter-rouge&quot;&gt;activerecord&lt;/code&gt; nhằm phục vụ cho mục đích tăng performance cho hệ thống.

Tuy nhiên trong một vài trường hợp hiếm khi xảy ra, chúng ta có 1 tập hợp gồm các bản ghi thuộc nhiều class khác nhau và mỗi class có các preloading khác nhau. Trong trường hợp này chúng ta cần sử dụng đến manually preload associations.

</description>
        <pubDate>Thu, 16 Aug 2018 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2018/08/16/manually-preloading-associations-in-rails/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/08/16/manually-preloading-associations-in-rails/</guid>
        
        
        <category>RoR</category>
        
      </item>
    
      <item>
        <title>Regular Expression</title>
        <description>
&lt;code class=&quot;highlighter-rouge&quot;&gt;RegEx&lt;/code&gt; hay còn gọi &lt;code class=&quot;highlighter-rouge&quot;&gt;Regular Expression&lt;/code&gt; là khái niệm khá quen thuộc với lập trình viên. Hay còn gọi là &lt;code class=&quot;highlighter-rouge&quot;&gt;Biểu thức chính quy&lt;/code&gt;.
&lt;code class=&quot;highlighter-rouge&quot;&gt;Regex&lt;/code&gt; là một chuỗi ký tự có quy tắc đặc biệt, được dùng làm mẫu (pattern) để phân tích sự trùng khớp của một tập hợp
chuỗi nào đó.
Cá nhân mình thấy, có khá nhiều lập trình viên đi làm 1-2 năm vẫn còn rất mơ hồ về &lt;code class=&quot;highlighter-rouge&quot;&gt;regex&lt;/code&gt;. Khi có vấn đề thì google
test thử thấy chạy đúng thì copy, paste mà không hiểu bản chất nó xử lý thế nào. Cá nhân mình cũng từng như vậy thế nên
mình đã hạ quyết tâm học hành cẩn thận kỹ thuật này.

</description>
        <pubDate>Wed, 06 Jun 2018 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2018/06/06/regular-expression/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/06/06/regular-expression/</guid>
        
        
        <category>Common</category>
        
      </item>
    
      <item>
        <title>How to avoid !important in css</title>
        <description>
&lt;code class=&quot;highlighter-rouge&quot;&gt;!important&lt;/code&gt;: Đây là từ khóa không lạ lẫm gì đối với 1 backend-developer.
Bạn đã có bao giờ gặp phải trường hợp cố gắng style cho một hoặc nhiều html element mà nó không có tác dụng?

Có vẻ như trang web đang bỏ qua style của bạn mà bạn không tìm được nguyên nhân?

Và bạn đã sử dụng &lt;code class=&quot;highlighter-rouge&quot;&gt;!important&lt;/code&gt;, cú pháp theo mình gọi thì nó là huyền thoại của các backend-developer khi cố gắng thiết kế giao
diện.

</description>
        <pubDate>Wed, 09 May 2018 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2018/05/09/important-in-css/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/05/09/important-in-css/</guid>
        
        
        <category>Frontend</category>
        
      </item>
    
      <item>
        <title>Ransack gem</title>
        <description>
&lt;a href=&quot;https://github.com/activerecord-hackery/ransack&quot;&gt;Gem Ransack&lt;/a&gt; đã trở nên quen thuộc với &lt;code class=&quot;highlighter-rouge&quot;&gt;RoR developer&lt;/code&gt; khi mà nó có mặt hầu như trong các project, bởi vì tính dễ
dàng cài đặt, sử dụng, dễ custom và tiết kiệm công sức developer.
Sau đây là một số ghi chép của mình về gem này…

</description>
        <pubDate>Wed, 28 Feb 2018 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2018/02/28/note-ransack-gem/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/02/28/note-ransack-gem/</guid>
        
        
        <category>RoR</category>
        
      </item>
    
      <item>
        <title>Dockerizing a ruby on rails application</title>
        <description>
Mình biết đến docker từ giữa năm 2016. Thời gian đó, thấy người người ca ngợi docker thần thánh, trong công ty cũng đã sử dụng docker thì mình cũng đua đòi nghịch ngợm chứ chưa xây dựng được một
cái gì ra hồn hết cả, bẵng đi một thời gian đến giữa năm 2017 thì được làm một dự án từ đầu nên mình đã quyết định sử
dụng docker vào dự án. Cứ mỗi khoảng thời gian bỏ phí mình lại thấy tiếc nuối =))

</description>
        <pubDate>Thu, 22 Feb 2018 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2018/02/22/dockerizing-a-ruby-on-rails-application/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/02/22/dockerizing-a-ruby-on-rails-application/</guid>
        
        
        <category>Docker</category>
        
      </item>
    
  </channel>
</rss>
